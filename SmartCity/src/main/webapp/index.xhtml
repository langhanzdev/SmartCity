<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://xmlns.jcp.org/jsf/html"
      xmlns:p="http://primefaces.org/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets"
      xmlns:f="http://xmlns.jcp.org/jsf/core"
      xmlns:c="http://xmlns.jcp.org/jsp/jstl/core"
      xmlns:pe="http://primefaces.org/ui/extensions">
    <h:head>
        <title>Smart City Control</title>
        
        <link src="https://openlayers.org/en/v5.2.0/css/ol.css" type="text/css"/>
        <!-- The line below is only needed for old environments like Internet Explorer and Android 4.x -->
        <script src="https://cdn.polyfill.io/v2/polyfill.min.js?features=requestAnimationFrame,Element.prototype.classList,URL"></script>
        
        <h:outputStylesheet name="/css/default.css"/>
        <h:outputStylesheet name="/css/cssLayout.css"/>
        <h:outputStylesheet name="/css/OpenLayersStyle.css"/>
        <h:outputStylesheet name="/css/custom.css"/> 
        <h:outputStylesheet name="/css/bootstrap.css"/> 
        <style type="text/css">
      html, body, #basicMap {
          width: 100%;
          height: 100%;
          margin: 0;
      }
    </style>
    <h:outputStylesheet name="css/OpenLayersStyle.css"/>
    <script src="OpenLayers.js"></script>
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js" type="text/javascript"></script>
    <script type="text/javascript">
        
        var map;
            var projection = new OpenLayers.Projection("EPSG:900913");
            var displayProjection = new OpenLayers.Projection("EPSG:4326");
    function init() {
        var options = {
                    projection: projection,
                    displayProjection: displayProjection,
                    units: "m",
                    maxResolution: 156543.0339,
                    maxExtent: new OpenLayers.Bounds(-20037508.34, -20037508.34,
                            20037508.34, 20037508.34),
                    crossOriginKeyword: null,
                    numZoomLevels: 19,
                    controls: [
                        new OpenLayers.Control.Navigation(),
                        //new OpenLayers.Control.PanZoomBar(),
                        new OpenLayers.Control.Permalink(),
                        new OpenLayers.Control.ScaleLine(),
                        //new OpenLayers.Control.SelectFeature(),
                        new OpenLayers.Control.MousePosition({}),
                        new OpenLayers.Control.KeyboardDefaults()
                    ]
                };
                
                //Mapa Online
                map = new OpenLayers.Map("basicMap", options);
                map.addLayer(new OpenLayers.Layer.OSM());
                var layer_style = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
                epsg4326 = new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
                projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)

                var lonLat = new OpenLayers.LonLat(-51.19,-30.05).transform(epsg4326, projectTo);

                var zoom = 15;
                map.setCenter(lonLat, zoom);

                var vectorLayer = new OpenLayers.Layer.Vector("Overlay");
                
//                var feature = new OpenLayers.Feature.Vector(
//                    new OpenLayers.Geometry.Point(-51.19, -30.05).transform(epsg4326, projectTo),
//                   
//                    {externalGraphic: 'javax.faces.resource/img/icon.png.xhtml', 
//                        graphicHeight: 25, 
//                        graphicWidth: 25, 
//                        graphicXOffset: 0, graphicYOffset: 0}
//                );
        
//                feature.style.externalGraphic = "javax.faces.resource/img/icon.png.xhtml";
                var i;
                
                var style_mark = OpenLayers.Util.extend({}, OpenLayers.Feature.Vector.style['default']);
            
                style_mark.graphicWidth = 25;
                style_mark.graphicHeight = 25;
                style_mark.graphicXOffset = 10; // default is -(style_mark.graphicWidth/2);
                style_mark.graphicYOffset = -style_mark.graphicHeight;
                style_mark.externalGraphic = "http://www.iconarchive.com/download/i87035/graphicloads/colorful-long-shadow/Bulb.ico";
                // title only works in Firefox and Internet Explorer
                style_mark.title = "this is a test tooltip";

                var vectorLayer = new OpenLayers.Layer.Vector("Simple Geometry", {
                    style: layer_style
                });
                var point3;
                var pointFeature3;
//                for(i=0;i&lt;10;i++){
                $.get('devices', {action: 0}, function (responseText) {
//                    alert(responseText);
                    $.each(responseText, function (index, item) { // Iterate over the JSON array.
//                        alert(item['id']);
                        point3 = new OpenLayers.Geometry.Point(parseFloat(item['lon']), parseFloat(item['lat'])).transform(epsg4326, projectTo);
                        pointFeature3 = new OpenLayers.Feature.Vector(point3,null,style_mark);
                        pointFeature3.id = item['id'];
                        pointFeature3.type = 0;  
                        vectorLayer.addFeatures(pointFeature3);
                    });
                
                });
                
                
                
                
                map.addLayer(vectorLayer);
        
        //Add a selector control to the vectorLayer with popup functions
                var controls = {
                    selector: new OpenLayers.Control.SelectFeature(vectorLayer, {onSelect: openInfoBar, onUnselect: closeInfoBar})
                    , click: new OpenLayers.Control.Click()
                };

                map.addControl(controls['selector']);
                controls['selector'].activate();



                var click = new OpenLayers.Control.Click();
                map.addControl(click);

                click.activate();
        
        /* 
        var hoje = new Date();
	var dia = hoje.getDate(); // Pega o dia atual (0-31)
	var mes = hoje.getMonth(); // Pega o mes atual (0-11) preste atenção ao manipulá-lo
	var ano = hoje.getFullYear(); // Pega o ano atual (4 dígitos)
	var hora = hoje.getHours(); // Pega a hora atual
	var minutos = hoje.getMinutes(); // Pega os minutos atuais
	var segundos = hoje.getSeconds(); // Pega os segundos atuais
          
        var projection = new OpenLayers.Projection("EPSG:900913");
        var displayProjection = new OpenLayers.Projection("EPSG:4326");
        var options = {
                   // projection: projection,
//                    displayProjection: displayProjection,
                    units: "m",
                    maxResolution: 156543.0339,
                    maxExtent: new OpenLayers.Bounds(-20037508.34, -20037508.34,
                            20037508.34, 20037508.34),
                    crossOriginKeyword: null,
                    numZoomLevels: 19,
                    controls: [
                        new OpenLayers.Control.Navigation(),
                        //new OpenLayers.Control.PanZoomBar(),
                        new OpenLayers.Control.Permalink(),
                        new OpenLayers.Control.ScaleLine(),
                        //new OpenLayers.Control.SelectFeature(),
                        new OpenLayers.Control.MousePosition({}),
                        new OpenLayers.Control.KeyboardDefaults()
                    ]
                };
             
        map = new OpenLayers.Map("basicMap", options);
        var vectorLayer = new OpenLayers.Layer.Vector("Overlay");
        
        var mapnik         = new OpenLayers.Layer.OSM();
        var fromProjection = new OpenLayers.Projection("EPSG:4326");   // Transform from WGS 1984
        var toProjection   = new OpenLayers.Projection("EPSG:900913"); // to Spherical Mercator Projection
        var position       = new OpenLayers.LonLat(-51.19,-30.05).transform( fromProjection, toProjection);
        var zoom           = 15; 
        
//        var feature = new OpenLayers.Feature.Vector(
//            new OpenLayers.Geometry.Point(parseFloat(-51.19,-30.05)).transform(fromProjection, toProjection)
//            
//        );
        map.addLayer(new OpenLayers.Layer.OSM());
//        map.addLayer(mapnik);



        var markers = new OpenLayers.Layer.Markers( "Markers" );
//        map.addLayer(markers);
            
        var lonLat = new OpenLayers.LonLat( -51.19,-30.05 ).transform(
            new OpenLayers.Projection("EPSG:4326"), // transform from WGS 1984
            map.getProjectionObject() // to Spherical Mercator Projection
          );
        var size = new OpenLayers.Size(21,25);
        var offset = new OpenLayers.Pixel(-(size.w/2), -size.h);
        var icon = new OpenLayers.Icon('javax.faces.resource/img/icon.png.xhtml', size, offset);  
            
         //   markers.addMarker(new OpenLayers.Marker(lonLat,icon));
            //markers.addMarker(new OpenLayers.Marker(lonLat,icon.clone()));
//        vectorLayer.addFeatures(feature);
//        map.addLayer(vectorLayer);
         
        
        
       // markers.addMarker(new OpenLayers.Marker(lonLat));
        
        map.setCenter(position, zoom );
        map.addLayer(vectorLayer);
//        var point = new OpenLayers.Geometry.Point( -51.19,-30.05);
//        var style =  {
//            externalGraphic: 'javax.faces.resources/img/icon.png.xhtml',
//            graphicWidth: 21,
//            graphicHeight: 25,
//            graphicYOffset: -24
//        };
        epsg4326 = new OpenLayers.Projection("EPSG:4326"); //WGS 1984 projection
        projectTo = map.getProjectionObject(); //The map projection (Spherical Mercator)
        var feature = new OpenLayers.Feature.Vector(
                new OpenLayers.Geometry.Point( -51.19,-30.05).transform(epsg4326, projectTo),
                {description: 'LPC'},
                {externalGraphic: 'javax.faces.resource/img/icon.png.xhtml', graphicHeight: 25, graphicWidth: 25, graphicXOffset: 0, graphicYOffset: 0}
        );
//        var pointFeature = new OpenLayers.Feature.Vector(point, null, style);
//        vectorLayer.addFeatures(pointFeature);
        vectorLayer.addFeatures(feature);
        map.addLayer(vectorLayer);
        var s = "";
//                $.get('devices', {action: 0}, function (responseText) {
//
//                    $.each(responseText, function (index, item) { // Iterate over the JSON array.
//                        alert(index);
//                        var feature = new OpenLayers.Feature.Vector(
//                            new OpenLayers.Geometry.Point(parseFloat(item['longitude']), parseFloat(item['latitude'])).transform(fromProjection, toProjection)
//                        );
//                        
//                        vectorLayer.addFeatures(feature);
//                    });
//                });
//        
        */
       
       
        
      }//end inti
      
      function deviceClick(e) {
    
            if(e.type == "LUM"){
                $("#idLuminary").val(e.id);
//                getDeviceInfo(e.id,0);
                $('#searchBar').hide();
                openInfoBarLight();
            }
            if(e.type == "MET"){
                $("#idLuminary").val(e.id);
//                getDeviceInfo(e.id,1);
                $('#searchBar').hide();
                openInfoBarSC();
            }
        }
        
//        function getDeviceInfo(id,type) {
////            showLoader();
//            $.get('devices', {lightid: id, type: type}, function (responseText) {
//                hideLoader();
//            });
//        }
      
      /**** Control click ****/
            OpenLayers.Control.Click = OpenLayers.Class(OpenLayers.Control, {
                defaultHandlerOptions: {
                    'single': true,
                    'double': false,
                    'pixelTolerance': 0,
                    'stopSingle': false,
                    'stopDouble': false
                },
                initialize: function (options) {
                    this.handlerOptions = OpenLayers.Util.extend(
                            {}, this.defaultHandlerOptions
                            );
                    OpenLayers.Control.prototype.initialize.apply(
                            this, arguments
                            );
                    this.handler = new OpenLayers.Handler.Click(
                            this, {
                                'click': this.trigger
                            }, this.handlerOptions
                            );
                    
                },
                trigger: function (e) {
                    
                    var lonlat = map.getLonLatFromPixel(e.xy);
                    lonlat1 = new OpenLayers.LonLat(lonlat.lon, lonlat.lat).transform(projection, displayProjection);
                    //alert("Lon: "+lonlat1.lon + "  Lat: " +lonlat1.lat);
                     
//                    PF('dlg2').show();
//                    
//                    $("#latitude").val(lonlat1.lat);
//                    $("#longitude").val(lonlat1.lon);

                }

            });
      
      
      function openCloseToolBar(){
          
          
          
      }
      
    function moveRelogio(){
        momentoAtual = new Date();
        hora = momentoAtual.getHours();
        minuto = momentoAtual.getMinutes();
        segundo = momentoAtual.getSeconds();

        horaImprimivel = hora + " : " + minuto;

        $("#time").html(horaImprimivel);

        setTimeout("moveRelogio()",60000)
    } 
    
    function getDeviceInfo(id,type) {
//        showLoader();
        $.get('DeviceOnlyServlet', {id: id, type: type}, function (responseText) {
//            hideLoader();
        });
    }
    
    function openNotificationBar() {
    $("#dvNotificationIcon").hide();
    $('#dvNotificationsBar').animate({
        right: "0"
    });
}

function closeNotificationBar() {
    $("#dvNotificationIcon").show();
    $('#dvNotificationsBar').animate({
        right: "-400"
    });
}

function openInfoBar(e) {
//    alert("Open");
    getDeviceInfo(e.id,e.type)
    $('#infoBar').slideDown("500");
//    $('#infoBar').animate({
//        left: "0"
//    });
}

function closeInfoBar() {
//    alert("close");
    $('#infoBar').slideUp("500");
//    $('#infoBar').animate({
//        left: "-350"
//    });
}
    </script>
    </h:head>
    <h:body onload="init();moveRelogio();">
       
        <div id="basicMap"></div>
        <h:form style="width: 100%;"   prependId="false">  
            
            <p:growl id="messages" showDetail="true" sticky="true" life="3000"/>  
            <p:menubar style="height: 25px;">

                <p:menuitem style="margin-top:-10px;" value="Map" url="/index.xhtml" icon="ui-icon-home" />
                <p:menuitem style="margin-top:-10px;" value="Groups" url="/index.xhtml" icon="ui-icon-home" />
                <p:menuitem style="margin-top:-10px;" value="Sector" url="/index.xhtml" icon="ui-icon-home" />
                <p:menuitem style="margin-top:-10px;" value="Maintanance" url="/index.xhtml" icon="ui-icon-home" />
                
                
                
                <f:facet name="options">
                    <p:menuitem style="margin-top:-10px;" value="asda" icon="fa-bell" />
                    <span id="time" style="margin-top: -10px;"></span>
                     

                </f:facet>

            </p:menubar>
            <!--<p:button  onclick="# {mapController.sendMessage()}"  value="AQUI"/>-->
        </h:form>
        
        <div id="infoBar" style="display:none;height: 96%;">
            <h1>Device Info</h1>
            <h:form id="infoBarForm">
            <p:poll interval="2" update="infoBarForm" process="@none" />
            <table id="tbInfo">
                <tr>
                    <td>Device Type</td>
                    <td>#{deviceController.currentDevice.type}</td>
                </tr>
                <tr>
                    <td>Device ID:</td>
                    <td>#{deviceController.currentDevice.id}</td>
                </tr>
                <tr>
                    <td>Latitude</td>
                    <td>#{deviceController.currentDevice.lat}</td>
                </tr>
                <tr>
                    <td>Longitude</td>
                    <td>#{deviceController.currentDevice.lon}</td>
                </tr>
                <tr>
                    <td>Domain</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Groups</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Sectors</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Status</td>
                    <td></td>
                </tr>
            </table>
            </h:form>
            <span onclick="openNotificationBar()" class="infoTitles">Actions</span><br/>
            <span class="infoTitles">Historical</span>
            
            
        </div>
        
        <!-- SIDE BAR NOTIFICATIONS -->
        <div id="dvNotificationsBar">
            <div id="dvNotificationBarContent">
                <h1>Notifications</h1>
                <br/><br/>
                <div style="overflow-y: auto;max-height: 90%;">
                    <h:form>
                        <h:panelGroup id="commentlist">
                            <ui:repeat  var="nt" value="#{deviceController.notificationList}" >

                                <div class="dvResultElement">
                                    <p:outputLabel value="#{nt}"/>
                                </div>

                            </ui:repeat>
                        </h:panelGroup>
                        <p:poll interval="5" update="commentlist" listener="#{deviceController.updateRoutine()}"/>
                    </h:form>
                </div>
            </div>
            <!-- button close notifications -->
            <div id="dvBtCloseNotification"  onclick="closeNotificationBar();">
                <p:graphicImage name="/img/CloseNotifications.png" width="20px"/>
            </div>
        </div>

        
    
  
    </h:body>
</html>

